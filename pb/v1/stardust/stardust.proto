/*
 *
 * Copyright 2020 stardust authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

// 定义项目 API 的 proto 文件
// protobuf 文件参考:
//  - https://developers.google.com/protocol-buffers/
syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

package service.stardust.v1;

option go_package = "stardust";
option (gogoproto.goproto_getters_all) = false;

service StarDust {
  rpc GetUniqueIds(IdReq) returns (IdsReply);
  rpc GetUniqueId(IdReq) returns (IdReply);
  rpc ParseId(ParseReq) returns (ParseReply);
}

message IdReq {
  int64 biz_type = 1 [(gogoproto.jsontag) = 'biz_type',(gogoproto.moretags) = 'form:"biz_type" validate:"required,gte=0,lt=32"'];
  int64 len = 2 [(gogoproto.jsontag) = 'len',(gogoproto.moretags) = 'form:"len" validate:"required,gte=0,lte=1000"'];
}

message IdsReply {
  repeated int64 ids = 1 [(gogoproto.jsontag) = 'ids'];
}

message IdReply {
  int64 id = 1 [(gogoproto.jsontag) = 'id'];
}

message ParseReq {
  int64 id = 1 [(gogoproto.jsontag) = 'id',(gogoproto.moretags) = 'form:"id" validate:"required"'];
}

message ParseReply {
  int64 time = 1 [(gogoproto.jsontag) = 'time'];
  int64 idc = 2 [(gogoproto.jsontag) = 'idc'];
  int64 worker = 3 [(gogoproto.jsontag) = 'worker'];
  int64 biz_type = 4 [(gogoproto.jsontag) = 'biz_type'];
  int64 sequence = 5 [(gogoproto.jsontag) = 'sequence'];
}
